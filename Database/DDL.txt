-- creacion de la DB

CREATE DATABASE apppyme;

-- public.rol definition

-- Drop table

-- DROP TABLE public.rol;

CREATE TABLE public.rol (
	descripcion varchar NOT NULL,
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	CONSTRAINT rol_pk PRIMARY KEY (id)
);

-- public.img definition

-- Drop table

-- DROP TABLE public.img;

CREATE TABLE public.img (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	"base64" varchar NOT NULL,
	CONSTRAINT img_pk PRIMARY KEY (id)
);

-- public.plataforma definition

-- Drop table

-- DROP TABLE public.plataforma;

CREATE TABLE public.plataforma (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	nombre varchar NOT NULL,
	CONSTRAINT plataforma_pk PRIMARY KEY (id)
);


-- public.desarrolladora definition

-- Drop table

-- DROP TABLE public.desarrolladora;

CREATE TABLE public.desarrolladora (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	nombre varchar NOT NULL,
	CONSTRAINT desarrolladora_pk PRIMARY KEY (id)
);

-- public.categoria definition

-- Drop table

-- DROP TABLE public.categoria;

CREATE TABLE public.categoria (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	nombre varchar NOT NULL,
	CONSTRAINT categoria_pk PRIMARY KEY (id)
);

-- public.videojuego definition

-- Drop table

-- DROP TABLE public.videojuego;

CREATE TABLE public.videojuego (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	nombre varchar NOT NULL,
	categoria_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	precio float8 NOT NULL,
	fechalanzamiento date NOT NULL,
	desarrolladora_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	img_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	cantidaddisponible int4 NOT NULL,
	plataforma_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	descripcion varchar NOT NULL,
	CONSTRAINT videojuego_pk PRIMARY KEY (id)
);

-- public.tokenotp definition

-- Drop table

-- DROP TABLE public.tokenotp;

CREATE TABLE public.tokenotp (
	user_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"token" varchar NOT NULL,
	fechadecreacion date NOT NULL,
	fechadevencimiento varchar NOT NULL,
	esvalido bool NOT NULL,
	estaverificado bool NOT NULL,
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY
);


-- public.tokenotp foreign keys

ALTER TABLE public.tokenotp ADD CONSTRAINT tokenotp_fk FOREIGN KEY (user_id) REFERENCES public.usuario(id);


-- public.rol definition

-- Drop table

-- DROP TABLE public.rol;

CREATE TABLE public.rol (
	descripcion varchar NOT NULL,
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	CONSTRAINT rol_pk PRIMARY KEY (id)
);

-- public.usuario definition

-- Drop table

-- DROP TABLE public.usuario;

CREATE TABLE public.usuario (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	username varchar NOT NULL,
	"password" varchar NOT NULL,
	rol_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	cuentaactiva bool NULL,
	CONSTRAINT usuario_pk PRIMARY KEY (id)
);


-- public.usuario foreign keys

ALTER TABLE public.usuario ADD CONSTRAINT usuario_fk FOREIGN KEY (rol_id) REFERENCES public.rol(id);


-- public.reporte definition

-- Drop table

-- DROP TABLE public.reporte;

CREATE TABLE public.reporte (
	id int4 NOT NULL GENERATED ALWAYS AS IDENTITY,
	"base64" varchar NOT NULL,
	fecha date NOT NULL,
	nombre varchar NOT NULL,
	user_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	tipodoc varchar NOT NULL,
	numdoc varchar NOT NULL,
	total float8 NOT NULL,
	totalrec float8 NULL,
	totalcam float8 NULL,
	metpag varchar NOT NULL,
	lv varchar NOT NULL,
	CONSTRAINT reporte_pk PRIMARY KEY (id)
);


-- public.reporte foreign keys

ALTER TABLE public.reporte ADD CONSTRAINT reporte_fk FOREIGN KEY (user_id) REFERENCES public.usuario(id) ON DELETE CASCADE ON UPDATE CASCADE;
